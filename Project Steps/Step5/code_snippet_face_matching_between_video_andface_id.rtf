{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red157\green0\blue210;\red255\green255\blue255;\red0\green0\blue0;
\red32\green108\blue135;\red101\green76\blue29;\red11\green90\blue180;\red144\green1\blue18;\red0\green0\blue109;
\red19\green118\blue70;\red0\green0\blue255;\red15\green112\blue1;}
{\*\expandedcolortbl;;\cssrgb\c68627\c0\c85882;\cssrgb\c100000\c100000\c100000;\cssrgb\c0\c0\c0;
\cssrgb\c14902\c49804\c60000;\cssrgb\c47451\c36863\c14902;\cssrgb\c0\c43922\c75686;\cssrgb\c63922\c8235\c8235;\cssrgb\c0\c6275\c50196;
\cssrgb\c3529\c52549\c34510;\cssrgb\c0\c0\c100000;\cssrgb\c0\c50196\c0;}
\margl1440\margr1440\vieww20620\viewh11540\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 import\cf0 \strokec4  \cf5 \strokec5 sys\cf0 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 import\cf0 \strokec4  \cf5 \strokec5 os\cf0 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 import\cf0 \strokec4  \cf5 \strokec5 datetime\cf0 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 from\cf0 \strokec4  \cf5 \strokec5 PIL\cf0 \strokec4  \cf2 \strokec2 import\cf0 \strokec4  \cf5 \strokec5 Image\cf0 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 import\cf0 \strokec4  \cf5 \strokec5 io\cf0 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 from\cf0 \strokec4  \cf5 \strokec5 matplotlib\cf0 \strokec4 .\cf5 \strokec5 pyplot\cf0 \strokec4  \cf2 \strokec2 import\cf0 \strokec4  \cf6 \strokec6 imshow\cf0 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 import\cf0 \strokec4  \cf5 \strokec5 matplotlib\cf0 \strokec4 .\cf5 \strokec5 pyplot\cf0 \strokec4  \cf2 \strokec2 as\cf0 \strokec4  \cf5 \strokec5 plt\cf0 \cb1 \strokec4 \
\
\
\cf2 \cb3 \strokec2 from\cf0 \strokec4  \cf5 \strokec5 urllib\cf0 \strokec4 .\cf5 \strokec5 parse\cf0 \strokec4  \cf2 \strokec2 import\cf0 \strokec4  \cf6 \strokec6 urlparse\cf0 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 from\cf0 \strokec4  \cf5 \strokec5 io\cf0 \strokec4  \cf2 \strokec2 import\cf0 \strokec4  \cf5 \strokec5 BytesIO\cf0 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 from\cf0 \strokec4  \cf5 \strokec5 PIL\cf0 \strokec4  \cf2 \strokec2 import\cf0 \strokec4  \cf5 \strokec5 Image\cf0 \strokec4 , \cf5 \strokec5 ImageDraw\cf0 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 import\cf0 \strokec4  \cf5 \strokec5 requests\cf0 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 from\cf0 \strokec4  \cf5 \strokec5 io\cf0 \strokec4  \cf2 \strokec2 import\cf0 \strokec4  \cf5 \strokec5 BytesIO\cf0 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 from\cf0 \strokec4  \cf5 \strokec5 video_indexer\cf0 \strokec4  \cf2 \strokec2 import\cf0 \strokec4  \cf5 \strokec5 VideoIndexer\cf0 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 from\cf0 \strokec4  \cf5 \strokec5 azure\cf0 \strokec4 .\cf5 \strokec5 cognitiveservices\cf0 \strokec4 .\cf5 \strokec5 vision\cf0 \strokec4 .\cf5 \strokec5 face\cf0 \strokec4  \cf2 \strokec2 import\cf0 \strokec4  \cf5 \strokec5 FaceClient\cf0 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 from\cf0 \strokec4  \cf5 \strokec5 azure\cf0 \strokec4 .\cf5 \strokec5 cognitiveservices\cf0 \strokec4 .\cf5 \strokec5 vision\cf0 \strokec4 .\cf5 \strokec5 face\cf0 \strokec4 .\cf5 \strokec5 models\cf0 \strokec4  \cf2 \strokec2 import\cf0 \strokec4  \cf5 \strokec5 TrainingStatusType\cf0 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 from\cf0 \strokec4  \cf5 \strokec5 msrest\cf0 \strokec4 .\cf5 \strokec5 authentication\cf0 \strokec4  \cf2 \strokec2 import\cf0 \strokec4  \cf5 \strokec5 CognitiveServicesCredentials\cf0 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf7 \cb3 \strokec7 CONFIG\cf0 \cb3 \strokec4  = \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3     \cf8 \cb3 \strokec8 'SUBSCRIPTION_KEY'\cf0 \cb3 \strokec4 : \cf8 \cb3 \strokec8 '621d1daaa9ff4041bc484d4f7b9d5d10'\cf0 \cb3 \strokec4 ,\cb1 \
\cb3     \cf8 \cb3 \strokec8 'LOCATION'\cf0 \cb3 \strokec4 : \cf8 \cb3 \strokec8 'trial'\cf0 \cb3 \strokec4 ,\cb1 \
\cb3     \cf8 \cb3 \strokec8 'ACCOUNT_ID'\cf0 \cb3 \strokec4 : \cf8 \cb3 \strokec8 '6723d089-da1a-41ab-ae6a-7074c23d084b'\cf0 \cb1 \strokec4 \
\cb3 \}\cb1 \
\
\cf9 \cb3 \strokec9 video_analysis\cf0 \cb3 \strokec4  = \cf5 \strokec5 VideoIndexer\cf0 \strokec4 (\cb1 \
\cb3     \cf9 \cb3 \strokec9 vi_subscription_key\cf0 \cb3 \strokec4 =\cf7 \cb3 \strokec7 CONFIG\cf0 \cb3 \strokec4 [\cf8 \cb3 \strokec8 'SUBSCRIPTION_KEY'\cf0 \cb3 \strokec4 ],\cb1 \
\cb3     \cf9 \cb3 \strokec9 vi_location\cf0 \cb3 \strokec4 =\cf7 \cb3 \strokec7 CONFIG\cf0 \cb3 \strokec4 [\cf8 \cb3 \strokec8 'LOCATION'\cf0 \cb3 \strokec4 ],\cb1 \
\cb3     \cf9 \cb3 \strokec9 vi_account_id\cf0 \cb3 \strokec4 =\cf7 \cb3 \strokec7 CONFIG\cf0 \cb3 \strokec4 [\cf8 \cb3 \strokec8 'ACCOUNT_ID'\cf0 \cb3 \strokec4 ]\cb1 \
\cb3 )\cb1 \
\pard\pardeftab720\partightenfactor0
\cf9 \cb3 \strokec9 \
\
video_analysis\cf0 \cb3 \strokec4 .\cf6 \strokec6 check_access_token\cf0 \strokec4 ()\cb1 \
\
\cf9 \cb3 \strokec9 video_id\cf0 \cb3 \strokec4  = \cf8 \cb3 \strokec8 '30fa204ae0'\cf0 \cb1 \strokec4 \
\
\cf9 \cb3 \strokec9 video_analysis\cf0 \cb3 \strokec4 .\cf6 \strokec6 get_video_info\cf0 \strokec4 (\cf9 \cb3 \strokec9 video_id\cf0 \cb3 \strokec4 )\cb1 \
\
\cf9 \cb3 \strokec9 info\cf0 \cb3 \strokec4  = \cf9 \cb3 \strokec9 video_analysis\cf0 \cb3 \strokec4 .\cf6 \strokec6 get_video_info\cf0 \strokec4 (\cf9 \cb3 \strokec9 video_id\cf0 \cb3 \strokec4 , \cf9 \cb3 \strokec9 video_language\cf0 \cb3 \strokec4 =\cf8 \cb3 \strokec8 'English'\cf0 \cb3 \strokec4 )\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 if\cf0 \strokec4  \cf6 \strokec6 len\cf0 \strokec4 (\cf9 \cb3 \strokec9 info\cf0 \cb3 \strokec4 [\cf8 \cb3 \strokec8 'videos'\cf0 \cb3 \strokec4 ][\cf10 \cb3 \strokec10 0\cf0 \cb3 \strokec4 ][\cf8 \cb3 \strokec8 'insights'\cf0 \cb3 \strokec4 ][\cf8 \cb3 \strokec8 'faces'\cf0 \cb3 \strokec4 ][\cf10 \cb3 \strokec10 0\cf0 \cb3 \strokec4 ][\cf8 \cb3 \strokec8 'thumbnails'\cf0 \cb3 \strokec4 ]):\cb1 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3     \cf6 \strokec6 print\cf0 \strokec4 (\cf8 \cb3 \strokec8 "We found \cf11 \strokec11 \{\}\cf8 \strokec8  faces in this video."\cf0 \cb3 \strokec4 .\cf6 \strokec6 format\cf0 \strokec4 (\cf5 \strokec5 str\cf0 \strokec4 (\cf6 \strokec6 len\cf0 \strokec4 (\cf9 \cb3 \strokec9 info\cf0 \cb3 \strokec4 [\cf8 \cb3 \strokec8 'videos'\cf0 \cb3 \strokec4 ][\cf10 \cb3 \strokec10 0\cf0 \cb3 \strokec4 ][\cf8 \cb3 \strokec8 'insights'\cf0 \cb3 \strokec4 ][\cf8 \cb3 \strokec8 'faces'\cf0 \cb3 \strokec4 ][\cf10 \cb3 \strokec10 0\cf0 \cb3 \strokec4 ][\cf8 \cb3 \strokec8 'thumbnails'\cf0 \cb3 \strokec4 ]))))\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf12 \cb3 \strokec12 # info['videos'][0]['insights']['faces'][0]['thumbnails']\cf0 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf9 \cb3 \strokec9 images\cf0 \cb3 \strokec4  = []\cb1 \
\cf9 \cb3 \strokec9 img_raw\cf0 \cb3 \strokec4  = []\cb1 \
\cf9 \cb3 \strokec9 img_strs\cf0 \cb3 \strokec4  = []\cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 for\cf0 \strokec4  \cf9 \cb3 \strokec9 each_thumb\cf0 \cb3 \strokec4  \cf2 \strokec2 in\cf0 \strokec4  \cf9 \cb3 \strokec9 info\cf0 \cb3 \strokec4 [\cf8 \cb3 \strokec8 'videos'\cf0 \cb3 \strokec4 ][\cf10 \cb3 \strokec10 0\cf0 \cb3 \strokec4 ][\cf8 \cb3 \strokec8 'insights'\cf0 \cb3 \strokec4 ][\cf8 \cb3 \strokec8 'faces'\cf0 \cb3 \strokec4 ][\cf10 \cb3 \strokec10 0\cf0 \cb3 \strokec4 ][\cf8 \cb3 \strokec8 'thumbnails'\cf0 \cb3 \strokec4 ]:\cb1 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3     \cf2 \strokec2 if\cf0 \strokec4  \cf8 \cb3 \strokec8 'fileName'\cf0 \cb3 \strokec4  \cf11 \cb3 \strokec11 in\cf0 \cb3 \strokec4  \cf9 \cb3 \strokec9 each_thumb\cf0 \cb3 \strokec4  \cf11 \cb3 \strokec11 and\cf0 \cb3 \strokec4  \cf8 \cb3 \strokec8 'id'\cf0 \cb3 \strokec4  \cf11 \cb3 \strokec11 in\cf0 \cb3 \strokec4  \cf9 \cb3 \strokec9 each_thumb\cf0 \cb3 \strokec4 :\cb1 \
\cb3         \cf9 \cb3 \strokec9 file_name\cf0 \cb3 \strokec4  = \cf9 \cb3 \strokec9 each_thumb\cf0 \cb3 \strokec4 [\cf8 \cb3 \strokec8 'fileName'\cf0 \cb3 \strokec4 ]\cb1 \
\cb3         \cf9 \cb3 \strokec9 thumb_id\cf0 \cb3 \strokec4  = \cf9 \cb3 \strokec9 each_thumb\cf0 \cb3 \strokec4 [\cf8 \cb3 \strokec8 'id'\cf0 \cb3 \strokec4 ]\cb1 \
\cb3         \cf9 \cb3 \strokec9 img_code\cf0 \cb3 \strokec4  = \cf9 \cb3 \strokec9 video_analysis\cf0 \cb3 \strokec4 .\cf6 \strokec6 get_thumbnail_from_video_indexer\cf0 \strokec4 (\cf9 \cb3 \strokec9 video_id\cf0 \cb3 \strokec4 ,  \cf9 \cb3 \strokec9 thumb_id\cf0 \cb3 \strokec4 )\cb1 \
\cb3         \cf9 \cb3 \strokec9 img_strs\cf0 \cb3 \strokec4 .\cf6 \strokec6 append\cf0 \strokec4 (\cf9 \cb3 \strokec9 img_code\cf0 \cb3 \strokec4 )\cb1 \
\cb3         \cf9 \cb3 \strokec9 img_stream\cf0 \cb3 \strokec4  = \cf5 \strokec5 io\cf0 \strokec4 .\cf5 \strokec5 BytesIO\cf0 \strokec4 (\cf9 \cb3 \strokec9 img_code\cf0 \cb3 \strokec4 )\cb1 \
\cb3         \cf9 \cb3 \strokec9 img_raw\cf0 \cb3 \strokec4 .\cf6 \strokec6 append\cf0 \strokec4 (\cf9 \cb3 \strokec9 img_stream\cf0 \cb3 \strokec4 )\cb1 \
\cb3         \cf9 \cb3 \strokec9 img\cf0 \cb3 \strokec4  = \cf5 \strokec5 Image\cf0 \strokec4 .\cf6 \strokec6 open\cf0 \strokec4 (\cf9 \cb3 \strokec9 img_stream\cf0 \cb3 \strokec4 )\cb1 \
\cb3         \cf9 \cb3 \strokec9 images\cf0 \cb3 \strokec4 .\cf6 \strokec6 append\cf0 \strokec4 (\cf9 \cb3 \strokec9 img\cf0 \cb3 \strokec4 )\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 for\cf0 \strokec4  \cf9 \cb3 \strokec9 img\cf0 \cb3 \strokec4  \cf2 \strokec2 in\cf0 \strokec4  \cf9 \cb3 \strokec9 images\cf0 \cb3 \strokec4 :\cb1 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3     \cf12 \cb3 \strokec12 # print(img.info)\cf0 \cb1 \strokec4 \
\cb3     \cf5 \strokec5 plt\cf0 \strokec4 .\cf6 \strokec6 figure\cf0 \strokec4 ()\cb1 \
\cb3     \cf5 \strokec5 plt\cf0 \strokec4 .\cf6 \strokec6 imshow\cf0 \strokec4 (\cf9 \cb3 \strokec9 img\cf0 \cb3 \strokec4 )\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf12 \cb3 \strokec12 # imagedata\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf9 \cb3 \strokec9 i\cf0 \cb3 \strokec4  = \cf10 \cb3 \strokec10 1\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 for\cf0 \strokec4  \cf9 \cb3 \strokec9 img\cf0 \cb3 \strokec4  \cf2 \strokec2 in\cf0 \strokec4  \cf9 \cb3 \strokec9 images\cf0 \cb3 \strokec4 :\cb1 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3     \cf12 \cb3 \strokec12 # print(type(img))\cf0 \cb1 \strokec4 \
\cb3     \cf9 \cb3 \strokec9 img\cf0 \cb3 \strokec4 .save(\cf8 \cb3 \strokec8 'human-face'\cf0 \cb3 \strokec4  + \cf5 \strokec5 str\cf0 \strokec4 (\cf9 \cb3 \strokec9 i\cf0 \cb3 \strokec4 ) + \cf8 \cb3 \strokec8 '.jpg'\cf0 \cb3 \strokec4 )\cb1 \
\cb3     \cf9 \cb3 \strokec9 i\cf0 \cb3 \strokec4 = \cf9 \cb3 \strokec9 i\cf0 \cb3 \strokec4 + \cf10 \cb3 \strokec10 1\cf0 \cb1 \strokec4 \
\cb3     \cf12 \cb3 \strokec12 # imagedata = img.\cf0 \cb1 \strokec4 \
\
\
\pard\pardeftab720\partightenfactor0
\cf11 \cb3 \strokec11 def\cf0 \cb3 \strokec4  \cf6 \strokec6 show_image_in_cell\cf0 \strokec4 (\cf9 \cb3 \strokec9 face_url\cf0 \cb3 \strokec4 ):\cb1 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3     \cf9 \cb3 \strokec9 response\cf0 \cb3 \strokec4  = \cf5 \strokec5 requests\cf0 \strokec4 .\cf6 \strokec6 get\cf0 \strokec4 (\cf9 \cb3 \strokec9 face_url\cf0 \cb3 \strokec4 )\cb1 \
\cb3     \cf9 \cb3 \strokec9 img\cf0 \cb3 \strokec4  = \cf5 \strokec5 Image\cf0 \strokec4 .\cf6 \strokec6 open\cf0 \strokec4 (\cf5 \strokec5 BytesIO\cf0 \strokec4 (\cf9 \cb3 \strokec9 response\cf0 \cb3 \strokec4 .\cf9 \cb3 \strokec9 content\cf0 \cb3 \strokec4 ))\cb1 \
\cb3     \cf5 \strokec5 plt\cf0 \strokec4 .\cf6 \strokec6 figure\cf0 \strokec4 (\cf9 \cb3 \strokec9 figsize\cf0 \cb3 \strokec4 =(\cf10 \cb3 \strokec10 20\cf0 \cb3 \strokec4 ,\cf10 \cb3 \strokec10 10\cf0 \cb3 \strokec4 ))\cb1 \
\cb3     \cf5 \strokec5 plt\cf0 \strokec4 .\cf6 \strokec6 imshow\cf0 \strokec4 (\cf9 \cb3 \strokec9 img\cf0 \cb3 \strokec4 )\cb1 \
\cb3     \cf5 \strokec5 plt\cf0 \strokec4 .\cf6 \strokec6 show\cf0 \strokec4 ()\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf11 \cb3 \strokec11 def\cf0 \cb3 \strokec4  \cf6 \strokec6 show_image_object_in_cell\cf0 \strokec4 (\cf9 \cb3 \strokec9 image_object\cf0 \cb3 \strokec4 ):\cb1 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3     \cf5 \strokec5 plt\cf0 \strokec4 .\cf6 \strokec6 figure\cf0 \strokec4 (\cf9 \cb3 \strokec9 figsize\cf0 \cb3 \strokec4 =(\cf10 \cb3 \strokec10 20\cf0 \cb3 \strokec4 ,\cf10 \cb3 \strokec10 10\cf0 \cb3 \strokec4 ))\cb1 \
\cb3     \cf5 \strokec5 plt\cf0 \strokec4 .\cf6 \strokec6 imshow\cf0 \strokec4 (\cf9 \cb3 \strokec9 image_object\cf0 \cb3 \strokec4 )\cb1 \
\cb3     \cf5 \strokec5 plt\cf0 \strokec4 .\cf6 \strokec6 show\cf0 \strokec4 ()\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf12 \cb3 \strokec12 # # TAKEN FROM THE Azure SDK Sample\cf0 \cb1 \strokec4 \
\cf12 \cb3 \strokec12 # # Convert width height to a point in a rectangle\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf11 \cb3 \strokec11 def\cf0 \cb3 \strokec4  \cf6 \strokec6 getRectangle\cf0 \strokec4 (\cf9 \cb3 \strokec9 faceDictionary\cf0 \cb3 \strokec4 ):\cb1 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3     \cf9 \cb3 \strokec9 rect\cf0 \cb3 \strokec4  = \cf9 \cb3 \strokec9 faceDictionary\cf0 \cb3 \strokec4 .face_rectangle\cb1 \
\cb3     \cf9 \cb3 \strokec9 left\cf0 \cb3 \strokec4  = \cf9 \cb3 \strokec9 rect\cf0 \cb3 \strokec4 .left\cb1 \
\cb3     \cf9 \cb3 \strokec9 top\cf0 \cb3 \strokec4  = \cf9 \cb3 \strokec9 rect\cf0 \cb3 \strokec4 .top\cb1 \
\cb3     \cf9 \cb3 \strokec9 right\cf0 \cb3 \strokec4  = \cf9 \cb3 \strokec9 left\cf0 \cb3 \strokec4  + \cf9 \cb3 \strokec9 rect\cf0 \cb3 \strokec4 .width\cb1 \
\cb3     \cf9 \cb3 \strokec9 bottom\cf0 \cb3 \strokec4  = \cf9 \cb3 \strokec9 top\cf0 \cb3 \strokec4  + \cf9 \cb3 \strokec9 rect\cf0 \cb3 \strokec4 .height\cb1 \
\cb3     \cf2 \strokec2 return\cf0 \strokec4  ((\cf9 \cb3 \strokec9 left\cf0 \cb3 \strokec4 , \cf9 \cb3 \strokec9 top\cf0 \cb3 \strokec4 ), (\cf9 \cb3 \strokec9 right\cf0 \cb3 \strokec4 , \cf9 \cb3 \strokec9 bottom\cf0 \cb3 \strokec4 ))\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf11 \cb3 \strokec11 def\cf0 \cb3 \strokec4  \cf6 \strokec6 drawFaceRectangles\cf0 \strokec4 (\cf9 \cb3 \strokec9 source_file\cf0 \cb3 \strokec4 , \cf9 \cb3 \strokec9 detected_face_object\cf0 \cb3 \strokec4 ) :\cb1 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3     \cf12 \cb3 \strokec12 # Download the image from the url\cf0 \cb1 \strokec4 \
\cb3     \cf9 \cb3 \strokec9 response\cf0 \cb3 \strokec4  = \cf5 \strokec5 requests\cf0 \strokec4 .\cf6 \strokec6 get\cf0 \strokec4 (\cf9 \cb3 \strokec9 source_file\cf0 \cb3 \strokec4 )\cb1 \
\cb3     \cf9 \cb3 \strokec9 img\cf0 \cb3 \strokec4  = \cf5 \strokec5 Image\cf0 \strokec4 .\cf6 \strokec6 open\cf0 \strokec4 (\cf5 \strokec5 BytesIO\cf0 \strokec4 (\cf9 \cb3 \strokec9 response\cf0 \cb3 \strokec4 .\cf9 \cb3 \strokec9 content\cf0 \cb3 \strokec4 ))\cb1 \
\cb3     \cf12 \cb3 \strokec12 # Draw a red box around every detected faces\cf0 \cb1 \strokec4 \
\cb3     \cf9 \cb3 \strokec9 draw\cf0 \cb3 \strokec4  = \cf5 \strokec5 ImageDraw\cf0 \strokec4 .\cf6 \strokec6 Draw\cf0 \strokec4 (\cf9 \cb3 \strokec9 img\cf0 \cb3 \strokec4 )\cb1 \
\cb3     \cf2 \strokec2 for\cf0 \strokec4  \cf9 \cb3 \strokec9 face\cf0 \cb3 \strokec4  \cf2 \strokec2 in\cf0 \strokec4  \cf9 \cb3 \strokec9 detected_face_object\cf0 \cb3 \strokec4 :\cb1 \
\cb3         \cf9 \cb3 \strokec9 draw\cf0 \cb3 \strokec4 .\cf6 \strokec6 rectangle\cf0 \strokec4 (\cf6 \strokec6 getRectangle\cf0 \strokec4 (\cf9 \cb3 \strokec9 face\cf0 \cb3 \strokec4 ), \cf9 \cb3 \strokec9 outline\cf0 \cb3 \strokec4 =\cf8 \cb3 \strokec8 'red'\cf0 \cb3 \strokec4 , \cf9 \cb3 \strokec9 width\cf0 \cb3 \strokec4  = \cf10 \cb3 \strokec10 10\cf0 \cb3 \strokec4 )\cb1 \
\cb3     \cf2 \strokec2 return\cf0 \strokec4  \cf9 \cb3 \strokec9 img\cf0 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf7 \cb3 \strokec7 FACE_KEY\cf0 \cb3 \strokec4  = \cf8 \cb3 \strokec8 "7fdd7dabd63240ff9a8f0f29f2fc4411"\cf0 \cb1 \strokec4 \
\cf7 \cb3 \strokec7 FACE_ENDPOINT\cf0 \cb3 \strokec4  = \cf8 \cb3 \strokec8 "https://face-boarding1.cognitiveservices.azure.com"\cf0 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf9 \cb3 \strokec9 face_client\cf0 \cb3 \strokec4  = \cf5 \strokec5 FaceClient\cf0 \strokec4 (\cf7 \cb3 \strokec7 FACE_ENDPOINT\cf0 \cb3 \strokec4 , \cf5 \strokec5 CognitiveServicesCredentials\cf0 \strokec4 (\cf7 \cb3 \strokec7 FACE_KEY\cf0 \cb3 \strokec4 ))\cb1 \
\
\cf9 \cb3 \strokec9 face_client\cf0 \cb3 \strokec4 .\cf9 \cb3 \strokec9 api_version\cf0 \cb1 \strokec4 \
\cf9 \cb3 \strokec9 face_image\cf0 \cb3 \strokec4  = \cf8 \cb3 \strokec8 "https://raw.githubusercontent.com/manfrednde/cd0461-building-computer-vision-solutions-with-azure-project-starter/master/starter/digital_id_template/ca-dl-avkash-chauhan.png"\cf0 \cb1 \strokec4 \
\cf9 \cb3 \strokec9 selected_image\cf0 \cb3 \strokec4  = \cf9 \cb3 \strokec9 face_image\cf0 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf12 \cb3 \strokec12 # show_image_in_cell(face_image)\cf0 \cb1 \strokec4 \
\
\
\cf12 \cb3 \strokec12 # Detect Face form an image\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf11 \cb3 \strokec11 def\cf0 \cb3 \strokec4  \cf6 \strokec6 detect_face_from_any_url\cf0 \strokec4 (\cf9 \cb3 \strokec9 selected_image\cf0 \cb3 \strokec4 ):\cb1 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3     \cf9 \cb3 \strokec9 detected_faces\cf0 \cb3 \strokec4  = \cf9 \cb3 \strokec9 face_client\cf0 \cb3 \strokec4 .\cf9 \cb3 \strokec9 face\cf0 \cb3 \strokec4 .\cf6 \strokec6 detect_with_url\cf0 \strokec4 (\cf9 \cb3 \strokec9 url\cf0 \cb3 \strokec4 =\cf9 \cb3 \strokec9 selected_image\cf0 \cb3 \strokec4 , \cf9 \cb3 \strokec9 detection_model\cf0 \cb3 \strokec4 =\cf8 \cb3 \strokec8 'detection_03'\cf0 \cb3 \strokec4 )\cb1 \
\cb3     \cf12 \cb3 \strokec12 # if not detected_faces:\cf0 \cb1 \strokec4 \
\cb3     \cf12 \cb3 \strokec12 #     raise Exception('No face detected from image \{\}'.format(single_image_name))        \cf0 \cb1 \strokec4 \
\cb3     \cf6 \strokec6 print\cf0 \strokec4 (\cf8 \cb3 \strokec8 'Total face(s) detected  from \cf11 \strokec11 \{\}\cf8 \strokec8 '\cf0 \cb3 \strokec4 .\cf6 \strokec6 format\cf0 \strokec4 (\cf5 \strokec5 str\cf0 \strokec4 (\cf6 \strokec6 len\cf0 \strokec4 (\cf9 \cb3 \strokec9 detected_faces\cf0 \cb3 \strokec4 )))) \cf12 \cb3 \strokec12 # type: ignore\cf0 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 return\cf0 \strokec4  \cf9 \cb3 \strokec9 detected_faces\cf0 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf12 \cb3 \strokec12 # Define a function to output the faces detected\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf11 \cb3 \strokec11 def\cf0 \cb3 \strokec4  \cf6 \strokec6 list_all_faces_from_detected_face_object\cf0 \strokec4 (\cf9 \cb3 \strokec9 detected_faces_object\cf0 \cb3 \strokec4 ):\cb1 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3     \cf6 \strokec6 print\cf0 \strokec4 (\cf8 \cb3 \strokec8 'We found total \cf11 \strokec11 \{\}\cf8 \strokec8  face(s) in selected face detected object.'\cf0 \cb3 \strokec4 .\cf6 \strokec6 format\cf0 \strokec4 (\cf5 \strokec5 str\cf0 \strokec4 (\cf6 \strokec6 len\cf0 \strokec4 (\cf9 \cb3 \strokec9 detected_faces_object\cf0 \cb3 \strokec4 ))))\cb1 \
\cb3     \cf9 \cb3 \strokec9 face_ids\cf0 \cb3 \strokec4  =  []\cb1 \
\cb3     \cf2 \strokec2 for\cf0 \strokec4  \cf9 \cb3 \strokec9 face\cf0 \cb3 \strokec4  \cf2 \strokec2 in\cf0 \strokec4  \cf9 \cb3 \strokec9 detected_faces_object\cf0 \cb3 \strokec4 : \cb1 \
\cb3         \cf9 \cb3 \strokec9 face_ids\cf0 \cb3 \strokec4 .\cf6 \strokec6 append\cf0 \strokec4 (\cf9 \cb3 \strokec9 face\cf0 \cb3 \strokec4 .face_id)\cb1 \
\cb3         \cf6 \strokec6 print\cf0 \strokec4  (\cf9 \cb3 \strokec9 face\cf0 \cb3 \strokec4 .face_id)\cb1 \
\cb3         \cf6 \strokec6 print\cf0 \strokec4  (\cf9 \cb3 \strokec9 face\cf0 \cb3 \strokec4 )\cb1 \
\cb3     \cf2 \strokec2 return\cf0 \strokec4  \cf9 \cb3 \strokec9 face_ids\cf0 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf9 \cb3 \strokec9 detected_faces_object\cf0 \cb3 \strokec4  = \cf6 \strokec6 detect_face_from_any_url\cf0 \strokec4 (\cf9 \cb3 \strokec9 selected_image\cf0 \cb3 \strokec4 )\cb1 \
\cf9 \cb3 \strokec9 face_ids_from_id_card\cf0 \cb3 \strokec4  = \cf6 \strokec6 list_all_faces_from_detected_face_object\cf0 \strokec4 (\cf9 \cb3 \strokec9 detected_faces_object\cf0 \cb3 \strokec4 )\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf6 \cb3 \strokec6 print\cf0 \strokec4 (\cf8 \cb3 \strokec8 'WE FOUND THAT a VIDEO'\cf0 \cb3 \strokec4 )\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf11 \cb3 \strokec11 def\cf0 \cb3 \strokec4  \cf6 \strokec6 detect_face_from_stream\cf0 \strokec4 (\cf9 \cb3 \strokec9 selected_image\cf0 \cb3 \strokec4 ):\cb1 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3     \cf9 \cb3 \strokec9 detected_faces\cf0 \cb3 \strokec4  = \cf9 \cb3 \strokec9 face_client\cf0 \cb3 \strokec4 .\cf9 \cb3 \strokec9 face\cf0 \cb3 \strokec4 .\cf6 \strokec6 detect_with_stream\cf0 \strokec4 (\cf9 \cb3 \strokec9 selected_image\cf0 \cb3 \strokec4 , \cf9 \cb3 \strokec9 detection_model\cf0 \cb3 \strokec4 =\cf8 \cb3 \strokec8 'detection_03'\cf0 \cb3 \strokec4 )\cb1 \
\cb3     \cf12 \cb3 \strokec12 # if not detected_faces:\cf0 \cb1 \strokec4 \
\cb3     \cf12 \cb3 \strokec12 #     raise Exception('No face detected from image \{\}'.format(single_image_name))        \cf0 \cb1 \strokec4 \
\cb3     \cf6 \strokec6 print\cf0 \strokec4 (\cf8 \cb3 \strokec8 'Total face(s) detected  from \cf11 \strokec11 \{\}\cf8 \strokec8 '\cf0 \cb3 \strokec4 .\cf6 \strokec6 format\cf0 \strokec4 (\cf5 \strokec5 str\cf0 \strokec4 (\cf6 \strokec6 len\cf0 \strokec4 (\cf9 \cb3 \strokec9 detected_faces\cf0 \cb3 \strokec4 )))) \cf12 \cb3 \strokec12 # type: ignore\cf0 \cb1 \strokec4 \
\cb3     \cf2 \strokec2 return\cf0 \strokec4  \cf9 \cb3 \strokec9 detected_faces\cf0 \cb1 \strokec4 \
\
\
\pard\pardeftab720\partightenfactor0
\cf9 \cb3 \strokec9 face_fd\cf0 \cb3 \strokec4  =  \cf6 \strokec6 open\cf0 \strokec4 (\cf8 \cb3 \strokec8 "human-face1.jpg"\cf0 \cb3 \strokec4 , \cf8 \cb3 \strokec8 "rb"\cf0 \cb3 \strokec4 )\cb1 \
\
\cf9 \cb3 \strokec9 video_detected_faces_object\cf0 \cb3 \strokec4  = \cf6 \strokec6 detect_face_from_stream\cf0 \strokec4 (\cf9 \cb3 \strokec9 face_fd\cf0 \cb3 \strokec4 )\cb1 \
\
\cf9 \cb3 \strokec9 face_ids_from_video\cf0 \cb3 \strokec4  = \cf6 \strokec6 list_all_faces_from_detected_face_object\cf0 \strokec4 (\cf9 \cb3 \strokec9 video_detected_faces_object\cf0 \cb3 \strokec4 )\cb1 \
\
\
\cf9 \cb3 \strokec9 verify_result_same\cf0 \cb3 \strokec4  = \cf9 \cb3 \strokec9 face_client\cf0 \cb3 \strokec4 .\cf9 \cb3 \strokec9 face\cf0 \cb3 \strokec4 .\cf6 \strokec6 verify_face_to_face\cf0 \strokec4 (\cf9 \cb3 \strokec9 face_ids_from_video\cf0 \cb3 \strokec4 [\cf10 \cb3 \strokec10 0\cf0 \cb3 \strokec4 ], \cf9 \cb3 \strokec9 face_ids_from_id_card\cf0 \cb3 \strokec4 [\cf10 \cb3 \strokec10 0\cf0 \cb3 \strokec4 ])\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 if\cf0 \strokec4  \cf9 \cb3 \strokec9 verify_result_same\cf0 \cb3 \strokec4 .is_identical: \cf12 \cb3 \strokec12 # type: ignore\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3     \cf6 \strokec6 print\cf0 \strokec4 (\cf8 \cb3 \strokec8 "Faces are Similar"\cf0 \cb3 \strokec4 )\cb1 \
\cb3     \cf6 \strokec6 print\cf0 \strokec4 (\cf8 \cb3 \strokec8 'Faces from \cf11 \strokec11 \{\}\cf8 \strokec8  & \cf11 \strokec11 \{\}\cf8 \strokec8  are of the same person, with confidence: \cf11 \strokec11 \{\}\cf8 \strokec8 '\cf0 \cb3 \strokec4 .\cf6 \strokec6 format\cf0 \strokec4 (\cf9 \cb3 \strokec9 face_ids_from_video\cf0 \cb3 \strokec4 [\cf10 \cb3 \strokec10 0\cf0 \cb3 \strokec4 ], \cf9 \cb3 \strokec9 face_ids_from_id_card\cf0 \cb3 \strokec4 [\cf10 \cb3 \strokec10 0\cf0 \cb3 \strokec4 ], \cf9 \cb3 \strokec9 verify_result_same\cf0 \cb3 \strokec4 .confidence)) \cf12 \cb3 \strokec12 # type: ignore\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 else\cf0 \strokec4 :\cb1 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3     \cf6 \strokec6 print\cf0 \strokec4 (\cf8 \cb3 \strokec8 "Faces are not Similar"\cf0 \cb3 \strokec4 )\cb1 \
\cb3     \cf6 \strokec6 print\cf0 \strokec4 (\cf8 \cb3 \strokec8 'Faces from \cf11 \strokec11 \{\}\cf8 \strokec8  & \cf11 \strokec11 \{\}\cf8 \strokec8  are of a different person, with confidence: \cf11 \strokec11 \{\}\cf8 \strokec8 '\cf0 \cb3 \strokec4 .\cf6 \strokec6 format\cf0 \strokec4 (\cf9 \cb3 \strokec9 face_ids_from_video\cf0 \cb3 \strokec4 [\cf10 \cb3 \strokec10 0\cf0 \cb3 \strokec4 ], \cf9 \cb3 \strokec9 face_ids_from_video\cf0 \cb3 \strokec4 [\cf10 \cb3 \strokec10 0\cf0 \cb3 \strokec4 ], \cf9 \cb3 \strokec9 verify_result_same\cf0 \cb3 \strokec4 .confidence)) \cf12 \cb3 \strokec12 # type: ignore\cf0 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf9 \cb3 \strokec9 face_fd\cf0 \cb3 \strokec4 .\cf6 \strokec6 close\cf0 \strokec4 ()\cb1 \
}